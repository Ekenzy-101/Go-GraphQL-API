apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: backend
        # Using a 3rd party private image i.e AWS ECR
        image: 596165603516.dkr.ecr.us-east-1.amazonaws.com/go-graphql-api@sha256:af0903cf66132cde294cc9355dd3bec565c6ae6c7955435841892bcbebd254f3
        imagePullPolicy: IfNotPresent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthcheck
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        name: backend
        ports:
        - containerPort: 5000
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            ephemeral-storage: 1Gi
            memory: 512Mi
          requests:
            cpu: 250m
            ephemeral-storage: 1Gi
            memory: 512Mi
      imagePullSecrets:
      # Create a docker registry secret i.e (aws ecr get-login-password)
      - name: aws

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: backend
  namespace: default
spec:
  maxReplicas: 5
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  targetCPUUtilizationPercentage: 70

---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: backend
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # Reserve a global static IP address with this name
    kubernetes.io/ingress.global-static-ip-name: backend 
  name: backend
  namespace: default
spec:
  defaultBackend:
    service:
      name: backend
      port:
        number: 5000
